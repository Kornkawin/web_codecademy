A remote is a Git repository that lives outside your Git project folder. 
Remotes can live on the web, on a shared network or even in a separate 
folder on your local computer.

The Git Collaborative Workflow are steps that enable smooth project 
development when multiple collaborators are working on the same Git 
project.  

Flow:
A. Update from the remote repo to the local master.
Method 1 (easy)
	1. git clone <remote_location> <clone name>: create a local copy 
	of a remote.
	2. git remote -v: to list a git project's remote (fetch & push).
	3. git fetch: fetch work from the remote into the local branch 
	(just update changes and can see the change in git diff).
	4. git diff: to see changes from fetch
	5. resolve conflict in git diff before pull
	6. git pull origin master: same as fetch but it could change files in your current branch 
	(and potentially lose your changes, etc).
	
Method 2 (common)
	1. git clone <remote_location> <clone name>: create a local copy 
	of a remote.
	2. git remote -v: to list a git project's remote (fetch & push).
	3. git fetch: fetch work from the remote into the local branch 
	(just update changes and can see the change in git diff).
	4. git merge origin master: Merge remote origin(master_branch) into the local branch
	(update commit in local to head commit in origin(master).

B. Create new branch to work on a new feature.
	1. git branch <brachname>: create a new branch.
	2. git branch: list branch in the repo.
	3. git checkout <branchname>: switch to another branch.
	4. git add <filename>: add file to the staging area.
	5. git commit -m "some messages": commit the work to the branch.

C. Update from the remote repo to the new local branch (in case new commits 
were made while we were working).
	1. git fetch
	2. git merge origin master
	3. Resolve merge confilct flow (D)

D. Resolve merge confilct.
	1. edit in files
	2. git add files
	3. git commit -m "Resolve merge conflict"

E. Push our new branch up to the remote (origin) for review.
	1. git push origin <branch_name>: push the branch up to the remote.
	(origin will have 2 branch: master, new_branch)

F. Merge the new branch (origin/new_branch) into the master (origin/master).
	1. git checkout master
	2. git merge new_branch.
	3. Resolve merge confilct flow (D)


Remark: "origin/master" vs "origin master"
1. "origin/master" on local branch
2. "origin master" on remote branch