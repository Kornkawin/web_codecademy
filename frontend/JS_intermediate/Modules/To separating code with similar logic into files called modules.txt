Pros
1. Find, fix, and debug code more easily;
2. Reuse and recycle defined logic in different parts of our application;
3. Keep information private and protected from other modules;
4. Importantly, prevent pollution of the global namespace and potential naming collisions, 
by cautiously selecting variables and behavior we load into a program.

In this lesson, we’ll cover two ways to implement modules in JavaScript: 
1. Node.js’s module.exports and require() syntax
2. The ES6 import/export syntax.